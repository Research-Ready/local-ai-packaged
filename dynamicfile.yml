http:
  routers:
    open-webui:
      rule: "Host(`openwebui.valuechainhackers.xyz`)"
      entryPoints:
        - websecure
      service: open-webui-service
      tls:
        certResolver: myresolver

    flowise:
      rule: "Host(`flowise.valuechainhackers.xyz`)"
      entryPoints:
        - websecure
      service: flowise-service
      tls:
        certResolver: myresolver

    n8n:
      rule: "Host(`n8n.valuechainhackers.xyz`)"
      entryPoints:
        - websecure
      service: n8n-service
      tls:
        certResolver: myresolver

    ollama:
      rule: "Host(`ollama.valuechainhackers.xyz`)"
      entryPoints:
        - websecure
      service: ollama-service
      tls:
        certResolver: myresolver

    searxng:
      rule: "Host(`searx.valuechainhackers.xyz`)"
      entryPoints:
        - websecure
      service: searxng-service
      tls:
        certResolver: myresolver

    langfuse:
      rule: "Host(`langfuse.valuechainhackers.xyz`)"
      entryPoints:
        - websecure
      service: langfuse-service
      tls:
        certResolver: myresolver

    neo4j:
      rule: "Host(`neo4j.valuechainhackers.xyz`)"
      entryPoints:
        - websecure
      service: neo4j-service
      tls:
        certResolver: myresolver

    clickhouse:
      rule: "Host(`clickhouse.valuechainhackers.xyz`)"
      entryPoints:
        - websecure
      service: clickhouse-service
      tls:
        certResolver: myresolver

    redis:
      rule: "Host(`redis.valuechainhackers.xyz`)"
      entryPoints:
        - websecure
      service: redis-service
      tls:
        certResolver: myresolver

    qdrant:
      rule: "Host(`qdrant.valuechainhackers.xyz`)"
      entryPoints:
        - websecure
      service: qdrant-service
      tls:
        certResolver: myresolver

    supabase-studio:
      rule: "Host(`studio.supabase.valuechainhackers.xyz`)"
      entryPoints:
        - websecure
      service: supabase-studio-service
      tls:
        certResolver: myresolver

    supabase-rest:
      rule: "Host(`rest.supabase.valuechainhackers.xyz`)"
      entryPoints:
        - websecure
      service: supabase-rest-service
      tls:
        certResolver: myresolver

    supabase-kong:
      rule: "Host(`api.supabase.valuechainhackers.xyz`)"
      entryPoints:
        - websecure
      service: supabase-kong-service
      tls:
        certResolver: myresolver

    supabase-analytics:
      rule: "Host(`analytics.supabase.valuechainhackers.xyz`)"
      entryPoints:
        - websecure
      service: supabase-analytics-service
      tls:
        certResolver: myresolver

    fallback:
      rule: "HostRegexp(`{host:.+}`)"
      entryPoints:
        - websecure
      service: fallback-service
      priority: 1
      tls:
        certResolver: myresolver

  services:
    open-webui-service:
      loadBalancer:
        servers:
          - url: "http://open-webui:8080"

    flowise-service:
      loadBalancer:
        servers:
          - url: "http://flowise:3001"

    n8n-service:
      loadBalancer:
        servers:
          - url: "http://n8n:5678"

    ollama-service:
      loadBalancer:
        servers:
          - url: "http://ollama:11434"

    searxng-service:
      loadBalancer:
        servers:
          - url: "http://searxng:8080"

    langfuse-service:
      loadBalancer:
        servers:
          - url: "http://localai-langfuse-web-1:3000"

    neo4j-service:
      loadBalancer:
        servers:
          - url: "http://localai-neo4j-1:7474"

    clickhouse-service:
      loadBalancer:
        servers:
          - url: "http://localai-clickhouse-1:8123"

    redis-service:
      loadBalancer:
        servers:
          - url: "http://redis:6379"

    qdrant-service:
      loadBalancer:
        servers:
          - url: "http://qdrant:6333"

    supabase-studio-service:
      loadBalancer:
        servers:
          - url: "http://supabase-studio:3000"

    supabase-rest-service:
      loadBalancer:
        servers:
          - url: "http://supabase-rest:3000"

    supabase-kong-service:
      loadBalancer:
        servers:
          - url: "http://supabase-kong:8000"

    supabase-analytics-service:
      loadBalancer:
        servers:
          - url: "http://supabase-analytics:4000"

    fallback-service:
      loadBalancer:
        servers:
          - url: "http://open-webui:8080"
